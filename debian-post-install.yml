---
- hosts: all
  become: true
  vars:
    ansible_skript: "debian-post-install.yml"
    skript_version: "v0.1"
    debian_main_repo_url: "http://gerzac1002.de/debian/"
    debian_security_repo_url: "http://gerzac1002.de/debian-security/"
    pakete:
      - bash-completion
      - python3-apt
      #- vim
      - less
      - tmux
      #- open-vm-tools
    pakete_bullseye_backports:
      - git
      - sshguard
  tasks:

    - name: "Führe Variablen zusammen"
      ansible.builtin.set_fact:
        pakete: "{% if weitere_pakete is defined %}{{ pakete + weitere_pakete }}{% else %}{{ pakete }}{% endif %}"

    - name: "Füge leere sources.list für apt hinzu"
      ansible.builtin.template:
        src: templates/sources.list.j2
        dest: /etc/apt/sources.list
        owner: root
        group: root
        mode: 644

    - name: "Füge Hauptrepository hinzu"
      ansible.builtin.template:
        src: templates/sources_list_d/main.list.j2
        dest: /etc/apt/sources.list.d/main.list
        owner: root
        group: root
        mode: 644

    - name: "Füge Sicherheitsrepository hinzu"
      ansible.builtin.template:
        src: templates/sources_list_d/security.list.j2
        dest: /etc/apt/sources.list.d/security.list
        owner: root
        group: root
        mode: 644

    - name: "Füge Backportsrepository hinzu"
      ansible.builtin.template:
        src: templates/sources_list_d/backports.list.j2
        dest: /etc/apt/sources.list.d/backports.list
        owner: root
        group: root
        mode: 644

    - name: "Aktualisiere System"
      ansible.builtin.apt:
        upgrade: "safe"
        update_cache: true

    - name: "Installiere Pakete"
      ansible.builtin.apt:
        pkg: "{{ item }}"
        state: present
      loop: "{{ pakete }}"

    - name: "Installiere Backports"
      ansible.builtin.apt:
        pkg: "{{ item }}"
        state: latest
      loop: "{{ pakete_bullseye_backports }}"

    - name: "Konfiguriere SSH-Server"
      ansible.builtin.template:
        src: templates/sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 644
      notify: Reload SSHD

    - name: "Konfiguriere SSH-Client"
      ansible.builtin.template:
        src: templates/ssh_config.j2
        dest: /etc/ssh/ssh_config
        owner: root
        group: root
        mode: 644

    - name: "Konfiguriere Standard Shell für neue Benutzer"
      ansible.builtin.lineinfile:
        path: /etc/default/useradd
        regexp: '^SHELL='
        line: SHELL=/bin/bash
        validate: 'grep SHELL=/bin/bash %s'

    - name: "Konfiguriere Standard bashrc"
      ansible.builtin.template:
        src: templates/bash.bashrc.j2
        dest: /etc/bash.bashrc
        owner: root
        group: root
        mode: 644

    - name: "Schreibe in /etc/motd"
      ansible.builtin.template:
        src: templates/motd.j2
        dest: /etc/motd
        owner: root
        group: root
        mode: 644

  handlers:
    - name: Reload SSHD
      ansible.builtin.service:
        name: sshd
        enabled: true
        state: reloaded
